#include <WiFi.h>
#include <HTTPClient.h>

// Replace with your network credentials
const char* ssid = "auiGuest";

// Server URL
const char* serverUrl = "https://auicapstone-ff08f1a84ee9.herokuapp.com/data";

// Soil moisture sensor settings
#define SOIL_MOISTURE_PIN 34  // Analog pin connected to the soil moisture sensor

void setup() {
  Serial.begin(115200);
  
  // Connect to Wi-Fi
  WiFi.begin(ssid);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
}

void loop() {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    
    // Generate random temperature and humidity values
    float temperature = random(10, 30) + random(0, 10) / 10.0;
    int humidity = random(30, 70);
    
    // Read soil moisture level
    int soilMoistureValue = analogRead(SOIL_MOISTURE_PIN);
    
    // Print values to serial monitor for debugging
    Serial.print("Temperature: ");
    Serial.println(temperature);
    Serial.print("Humidity: ");
    Serial.println(humidity);
    Serial.print("Soil Moisture Value: ");
    Serial.println(soilMoistureValue);
    
    // Create JSON data
    String jsonData = "{\"temperature\":" + String(temperature) + ",\"humidity\":" + String(humidity) + ",\"soilMoisture\":" + String(soilMoistureValue) + "}";
    
    // Send HTTP POST request
    http.begin(serverUrl);
    http.addHeader("Content-Type", "application/json");
    int httpResponseCode = http.POST(jsonData);
    
    // Print response
    Serial.print("Status Code: ");
    Serial.println(httpResponseCode);
    if (httpResponseCode > 0) {
      String response = http.getString();
      Serial.print("Response: ");
      Serial.println(response);
    } else {
      Serial.print("Error: ");
      Serial.println(http.errorToString(httpResponseCode).c_str());
    }
    
    http.end();
  } else {
    Serial.println("WiFi Disconnected");
  }
  
  // Wait for 10 seconds before sending the next request
  delay(10000);
}
